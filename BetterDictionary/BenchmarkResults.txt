### Test code can be found in Benchmark.cs file ###

| Method                       | Mean    | Error    | StdDev   | Median  | Rank | Gen0        | Gen1        | Gen2       | Allocated |
|----------------------------- |--------:|---------:|---------:|--------:|-----:|------------:|------------:|-----------:|----------:|
| DictionaryExtension          | 3.101 s | 0.1332 s | 0.3864 s | 2.964 s |    1 | 199000.0000 |  74000.0000 |  9000.0000 |   3.61 GB |
| DictionaryTryAdd             | 3.691 s | 0.0856 s | 0.2483 s | 3.689 s |    2 | 199000.0000 |  74000.0000 |  9000.0000 |   3.61 GB |
| DictionaryContainsKey        | 3.800 s | 0.1924 s | 0.5613 s | 3.898 s |    2 | 199000.0000 |  74000.0000 |  9000.0000 |   3.61 GB |
| ConcurrentDictionaryGetOrAdd | 9.020 s | 0.2434 s | 0.7138 s | 8.883 s |    3 | 695000.0000 | 244000.0000 | 10000.0000 |   4.72 GB |

// * Legends *
  Mean      : Arithmetic mean of all measurements
  Error     : Half of 99.9% confidence interval
  StdDev    : Standard deviation of all measurements
  Median    : Value separating the higher half of all measurements (50th percentile)
  Rank      : Relative position of current benchmark mean among all benchmarks (Arabic style)
  Gen0      : GC Generation 0 collects per 1000 operations
  Gen1      : GC Generation 1 collects per 1000 operations
  Gen2      : GC Generation 2 collects per 1000 operations
  Allocated : Allocated memory per single operation (managed only, inclusive, 1KB = 1024B)
  1 s       : 1 Second (1 sec)

// * Detailed results *
Benchmark.DictionaryExtension: DefaultJob
Runtime = .NET 9.0.2 (9.0.225.6610), Arm64 RyuJIT AdvSIMD; GC = Concurrent Workstation
Mean = 3.101 s, StdErr = 0.039 s (1.27%), N = 97, StdDev = 0.386 s
Min = 2.668 s, Q1 = 2.770 s, Median = 2.964 s, Q3 = 3.406 s, Max = 4.324 s
IQR = 0.636 s, LowerFence = 1.815 s, UpperFence = 4.360 s
ConfidenceInterval = [2.968 s; 3.234 s] (CI 99.9%), Margin = 0.133 s (4.29% of Mean)
Skewness = 0.99, Kurtosis = 3.18, MValue = 2.54
-------------------- Histogram --------------------
[2.557 s ; 2.736 s) | @@@@@@@
[2.736 s ; 2.957 s) | @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
[2.957 s ; 3.225 s) | @@@@@@@@@@@@@@@@@@@@
[3.225 s ; 3.463 s) | @@@@@@
[3.463 s ; 3.683 s) | @@@@@@@@@@@@@@@@
[3.683 s ; 3.907 s) | @@@@
[3.907 s ; 4.170 s) | @
[4.170 s ; 4.434 s) | @@
---------------------------------------------------

Benchmark.DictionaryTryAdd: DefaultJob
Runtime = .NET 9.0.2 (9.0.225.6610), Arm64 RyuJIT AdvSIMD; GC = Concurrent Workstation
Mean = 3.691 s, StdErr = 0.025 s (0.68%), N = 97, StdDev = 0.248 s
Min = 3.222 s, Q1 = 3.499 s, Median = 3.689 s, Q3 = 3.828 s, Max = 4.327 s
IQR = 0.329 s, LowerFence = 3.005 s, UpperFence = 4.322 s
ConfidenceInterval = [3.605 s; 3.776 s] (CI 99.9%), Margin = 0.086 s (2.32% of Mean)
Skewness = 0.33, Kurtosis = 2.59, MValue = 2.06
-------------------- Histogram --------------------
[3.151 s ; 3.245 s) | @
[3.245 s ; 3.387 s) | @@@@@@@@@@@
[3.387 s ; 3.563 s) | @@@@@@@@@@@@@@@@@@@@
[3.563 s ; 3.760 s) | @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
[3.760 s ; 3.908 s) | @@@@@@@@@@@@@@@
[3.908 s ; 4.119 s) | @@@@@@@@@@@@@@@
[4.119 s ; 4.220 s) | 
[4.220 s ; 4.362 s) | @@@
---------------------------------------------------

Benchmark.DictionaryContainsKey: DefaultJob
Runtime = .NET 9.0.2 (9.0.225.6610), Arm64 RyuJIT AdvSIMD; GC = Concurrent Workstation
Mean = 3.800 s, StdErr = 0.057 s (1.49%), N = 98, StdDev = 0.561 s
Min = 3.057 s, Q1 = 3.264 s, Median = 3.898 s, Q3 = 4.149 s, Max = 5.389 s
IQR = 0.885 s, LowerFence = 1.936 s, UpperFence = 5.477 s
ConfidenceInterval = [3.607 s; 3.992 s] (CI 99.9%), Margin = 0.192 s (5.06% of Mean)
Skewness = 0.72, Kurtosis = 3.36, MValue = 3.7
-------------------- Histogram --------------------
[3.055 s ; 3.375 s) | @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
[3.375 s ; 3.702 s) | @@@@@@@@@@@@
[3.702 s ; 3.927 s) | @@@@@@@@
[3.927 s ; 4.247 s) | @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
[4.247 s ; 4.538 s) | @@@@@@@@@
[4.538 s ; 4.857 s) | 
[4.857 s ; 5.174 s) | 
[5.174 s ; 5.549 s) | @@@@@
---------------------------------------------------

Benchmark.ConcurrentDictionaryGetOrAdd: DefaultJob
Runtime = .NET 9.0.2 (9.0.225.6610), Arm64 RyuJIT AdvSIMD; GC = Concurrent Workstation
Mean = 9.020 s, StdErr = 0.072 s (0.80%), N = 99, StdDev = 0.714 s
Min = 7.936 s, Q1 = 8.649 s, Median = 8.883 s, Q3 = 9.725 s, Max = 10.522 s
IQR = 1.077 s, LowerFence = 7.034 s, UpperFence = 11.340 s
ConfidenceInterval = [8.776 s; 9.263 s] (CI 99.9%), Margin = 0.243 s (2.70% of Mean)
Skewness = 0.49, Kurtosis = 2.08, MValue = 3.42
-------------------- Histogram --------------------
[ 7.734 s ;  7.963 s) | @@
[ 7.963 s ;  8.368 s) | @@@@@@@@@@@@@@@@@@@@
[ 8.368 s ;  8.637 s) | @@
[ 8.637 s ;  9.042 s) | @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
[ 9.042 s ;  9.479 s) | @@
[ 9.479 s ;  9.801 s) | @@@@@
[ 9.801 s ; 10.206 s) | @@@@@@@@@@@@@@@@
[10.206 s ; 10.585 s) | @@@@@@@
---------------------------------------------------


BenchmarkDotNet v0.15.2, macOS Sequoia 15.5 (24F74) [Darwin 24.5.0]
Apple M1, 1 CPU, 8 logical and 8 physical cores
.NET SDK 9.0.200
  [Host]     : .NET 9.0.2 (9.0.225.6610), Arm64 RyuJIT AdvSIMD